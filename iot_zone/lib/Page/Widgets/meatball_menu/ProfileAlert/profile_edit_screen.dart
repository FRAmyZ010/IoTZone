import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'dart:io';

class ProfileEditScreen extends StatefulWidget {
  const ProfileEditScreen({super.key});

  @override
  State<ProfileEditScreen> createState() => _ProfileEditScreenState();
}

class _ProfileEditScreenState extends State<ProfileEditScreen> {
  File? _imageFile;

  final TextEditingController _usernameController = TextEditingController(
    text: 'Doi,za007',
  );
  final TextEditingController _fullnameController = TextEditingController(
    text: 'Parinthon Somphakdee',
  );
  final TextEditingController _emailController = TextEditingController(
    text: 'doiza007@gmail.com',
  );
  final TextEditingController _phoneController = TextEditingController(
    text: '0xxxxxxxxx',
  );

  Future<void> _pickImage() async {
    final ImagePicker picker = ImagePicker();
    // ‡πÉ‡∏ä‡πâ .pickImage ‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô gallery ‡∏´‡∏£‡∏∑‡∏≠ camera
    final XFile? pickedFile = await picker.pickImage(
      source: ImageSource.gallery,
    );

    if (pickedFile != null) {
      // üí° ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: ‡∏´‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (pickedFile ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà null)
      // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ setState() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ Flutter ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ '‡∏™‡∏£‡πâ‡∏≤‡∏á' (re-build) Widget ‡πÉ‡∏´‡∏°‡πà
      // ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ _imageFile ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà
      setState(() {
        _imageFile = File(pickedFile.path); // ‡πÅ‡∏õ‡∏•‡∏á XFile ‡πÄ‡∏õ‡πá‡∏ô File
      });
    }
  }

  Widget _buildProfileImagePicker() {
    // üí° ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: GestureDetector/InkWell ‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡∏∞
    return Center(
      child: Stack(
        children: [
          GestureDetector(
            onTap:
                _pickImage, // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏ï‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            child: Container(
              width: 150,
              height: 150,
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(15.0),
                // ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏∞‡πÑ‡∏£: ‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å vs. ‡∏£‡∏π‡∏õ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                image: DecorationImage(
                  image: _imageFile != null
                      ? FileImage(_imageFile!)
                            as ImageProvider // ‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
                      : const AssetImage(
                          'asset/icon/user.png',
                        ), // ‡∏£‡∏π‡∏õ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ô assets)
                  fit: BoxFit.cover,
                ),
                color: Colors.grey[200],
              ),
              child: _imageFile == null
                  ? const Icon(Icons.person, size: 70, color: Colors.grey)
                  : null, // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô placeholder
            ),
          ),
          // ‡∏õ‡∏∏‡πà‡∏° UPLOAD ‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏°‡∏∏‡∏°‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤
          Positioned(
            bottom: 0,
            right: 0,
            child: InkWell(
              onTap: _pickImage,
              child: Container(
                padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
                decoration: BoxDecoration(
                  color: Colors.red,
                  borderRadius: BorderRadius.circular(4),
                ),
                child: const Text(
                  'UPLOAD',
                  style: TextStyle(color: Colors.white, fontSize: 10),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ _ProfileEditScreenState

  // üí° ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: ‡πÉ‡∏ä‡πâ TextFormField ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° (controller)
  // ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö (Decoration) ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢
  Widget _buildInputField({
    required String label,
    required TextEditingController controller,
    IconData icon = Icons.info_outline, // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    bool readOnly = false,
    TextInputType keyboardType = TextInputType.text,
  }) {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),
      decoration: BoxDecoration(
        color: Colors.grey[100],
        borderRadius: BorderRadius.circular(8.0),
        border: Border.all(color: Colors.grey.shade300),
      ),
      child: Row(
        children: [
          Icon(icon, color: Colors.grey[600]),
          const SizedBox(width: 10),
          Expanded(
            child: TextFormField(
              controller: controller,
              keyboardType: keyboardType,
              readOnly: readOnly,
              decoration: InputDecoration(
                labelText: label,
                labelStyle: TextStyle(color: Colors.grey[700]),
                border: InputBorder.none, // ‡∏•‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏µ‡∏î‡πÉ‡∏ï‡πâ
                isDense: true,
                contentPadding: const EdgeInsets.only(top: 10, bottom: 5),
              ),
            ),
          ),
        ],
      ),
    );
  }

  // Widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
  void _confirmProfile() {
    // üí° ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Controllers ‡πÑ‡∏î‡πâ
    print('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${_fullNameController.text}');
    // TODO: ‡πÉ‡∏™‡πà Logic ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Save to API/Database)
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(content: Text('Profile updated successfully!')),
    );
    // Navigator.pop(context); // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°
  }

  Widget _buildConfirmButton() {
    return ElevatedButton(
      onPressed: _confirmProfile,
      style: ElevatedButton.styleFrom(
        backgroundColor: Colors.lightGreen,
        padding: const EdgeInsets.symmetric(vertical: 15),
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      ),
      child: const Text(
        'CONFIRM',
        style: TextStyle(
          fontSize: 18,
          fontWeight: FontWeight.bold,
          color: Colors.white,
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Profile')),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          children: <Widget>[
            _buildProfileImagePicker(), // ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
            const SizedBox(height: 30),
            _buildInputField(
              label: 'Full Name',
              controller: _fullnameController,
            ), // ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            // ... ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏∑‡πà‡∏ô‡πÜ
            const SizedBox(height: 50),
            _buildConfirmButton(), // ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
          ],
        ),
      ),
    );
  }
}
